1.create form.html

* form.as_p returns the djano form created in views.py as a paragraph
* {% csrf_token %} = security purpose tag
* <input type="submit" class="btn btn-primary" value="Submit"> button to submit the form
* Note that here "form" is same as the object of class "FormName" created in views.py 


<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Forms</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css"
    integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">
  </head>
  <body>

    <h1>Fill out the form!</h1>
    <div class="container">
      <form method="POST">
          {{ form.as_p }}
          {% csrf_token %}
        <input type="submit" class="btn btn-primary" value="Submit">
      </form>
    </div>

  </body>
</html>

=========================================================
2.create a new file "forms.py" inside the dir of django app to create a django form

creating django forms is very similar to creating a model 

note that our form class extends "form.Form" class

eg.
from django import forms

class FormName(forms.Form):
    name = forms.CharField()
    email = forms.EmailField()
    text = forms.CharField(widget=forms.Textarea)
=========================================================


3.updating views.py file to return a djano form to the html page

from django.shortcuts import render
from . import forms
# Create your views here.

def index(request):
    return render(request,'basicapp/index.html')

def form_name_view(request):
    form = forms.FormName() 	#creating the object of the FormName class residing in forms.py file
    return render(request,'basicapp/form_page.html',{'form':form})	#here rendering form object created to placeholder in html {'form'->placeholder of html:form->django form object created}

=================================================================

4.editing the project urls.py file

eg.
from django.contrib import admin
from django.urls import path
from basicapp import views

urlpatterns = [
    path('',views.index,name='index'),
    path('admin/', admin.site.urls),
    path('formpage/',views.form_name_view,name='form_name'),
]

================================================================


views.py to handle post request for django forms

from django.shortcuts import render
from . import forms
# Create your views here.

def index(request):
    return render(request,'basicapp/index.html')

def form_name_view(request):
    form = forms.FormName()

    if request.method == 'POST':
        form = forms.FormName(request.POST)   #creating the object of the FormName class residing in forms.py file by passing request post method

        if form.is_valid():     #checking if form is valid
            # DO SOMETHING CODE
            print("VALIDATION SUCCESS!")
            print("NAME: "+form.cleaned_data['name'])     #cleaned_data is key word that contains data entered into the form
            print("EMAIL: "+form.cleaned_data['email'])
            print("TEXT: "+form.cleaned_data['text'])

    return render(request,'basicapp/form_page.html',{'form':form})


Whatever the data submitted with a form, once it has been successfully validated by calling is_valid() (and is_valid() has returned True), the validated form data will be in the form.cleaned_data dictionary.
